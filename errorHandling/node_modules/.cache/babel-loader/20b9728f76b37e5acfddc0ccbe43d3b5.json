{"remainingRequest":"/home/cachac/vv/errorHandling/node_modules/babel-loader/lib/index.js!/home/cachac/vv/errorHandling/node_modules/eslint-loader/index.js??ref--13-0!/home/cachac/vv/errorHandling/src/store/modules/event.js","dependencies":[{"path":"/home/cachac/vv/errorHandling/src/store/modules/event.js","mtime":1566957068502},{"path":"/home/cachac/vv/errorHandling/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cachac/vv/errorHandling/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/cachac/vv/errorHandling/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport EventService from '@/services/EventService.js';\nexport var namespaced = true;\nexport var state = {\n  events: [],\n  eventsTotal: 0,\n  event: {},\n  perPage: 3\n};\nexport var mutations = {\n  ADD_EVENT: function ADD_EVENT(state, event) {\n    state.events.push(event);\n  },\n  SET_EVENTS: function SET_EVENTS(state, events) {\n    state.events = events;\n  },\n  SET_EVENTS_TOTAL: function SET_EVENTS_TOTAL(state, eventsTotal) {\n    state.eventsTotal = eventsTotal;\n  },\n  SET_EVENT: function SET_EVENT(state, event) {\n    state.event = event;\n  }\n};\nexport var actions = {\n  createEvent: function createEvent(_ref, event) {\n    var commit = _ref.commit,\n        dispatch = _ref.dispatch;\n    return EventService.postEvent(event).then(function () {\n      commit('ADD_EVENT', event);\n      commit('SET_EVENT', event);\n      var notification = {\n        type: 'success',\n        message: 'Your event has been created!'\n      };\n      dispatch('notification/add', notification, {\n        root: true\n      });\n    }).catch(function (error) {\n      var notification = {\n        type: 'error',\n        message: 'There was a problem creating your event: ' + error.message\n      };\n      dispatch('notification/add', notification, {\n        root: true\n      });\n      throw error;\n    });\n  },\n  fetchEvents: function fetchEvents(_ref2, _ref3) {\n    var commit = _ref2.commit,\n        dispatch = _ref2.dispatch,\n        state = _ref2.state;\n    var page = _ref3.page;\n    return EventService.getEvents(state.perPage, page).then(function (response) {\n      commit('SET_EVENTS_TOTAL', parseInt(response.headers['x-total-count']));\n      commit('SET_EVENTS', response.data);\n    }).catch(function (error) {\n      var notification = {\n        type: 'error',\n        message: 'There was a problem fetching events: ' + error.message\n      };\n      dispatch('notification/add', notification, {\n        root: true\n      });\n    });\n  },\n  fetchEvent: function fetchEvent(_ref4, id) {\n    var commit = _ref4.commit,\n        getters = _ref4.getters,\n        state = _ref4.state;\n\n    if (id == state.event.id) {\n      return state.event;\n    }\n\n    var event = getters.getEventById(id);\n\n    if (event) {\n      commit('SET_EVENT', event);\n      return event;\n    } else {\n      return EventService.getEvent(id).then(function (response) {\n        commit('SET_EVENT', response.data);\n        return response.data;\n      });\n    }\n  }\n};\nexport var getters = {\n  getEventById: function getEventById(state) {\n    return function (id) {\n      return state.events.find(function (event) {\n        return event.id === id;\n      });\n    };\n  }\n};",{"version":3,"sources":["/home/cachac/vv/errorHandling/src/store/modules/event.js"],"names":["EventService","namespaced","state","events","eventsTotal","event","perPage","mutations","ADD_EVENT","push","SET_EVENTS","SET_EVENTS_TOTAL","SET_EVENT","actions","createEvent","commit","dispatch","postEvent","then","notification","type","message","root","catch","error","fetchEvents","page","getEvents","response","parseInt","headers","data","fetchEvent","id","getters","getEventById","getEvent","find"],"mappings":"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","sourcesContent":["import EventService from '@/services/EventService.js'\n\nexport const namespaced = true\n\nexport const state = {\n  events: [],\n  eventsTotal: 0,\n  event: {},\n  perPage: 3\n}\n\nexport const mutations = {\n  ADD_EVENT(state, event) {\n    state.events.push(event)\n  },\n  SET_EVENTS(state, events) {\n    state.events = events\n  },\n  SET_EVENTS_TOTAL(state, eventsTotal) {\n    state.eventsTotal = eventsTotal\n  },\n  SET_EVENT(state, event) {\n    state.event = event\n  }\n}\n\nexport const actions = {\n  createEvent({ commit, dispatch }, event) {\n    return EventService.postEvent(event)\n      .then(() => {\n        commit('ADD_EVENT', event)\n        commit('SET_EVENT', event)\n        const notification = {\n          type: 'success',\n          message: 'Your event has been created!'\n        }\n        dispatch('notification/add', notification, { root: true })\n      })\n      .catch(error => {\n        const notification = {\n          type: 'error',\n          message: 'There was a problem creating your event: ' + error.message\n        }\n        dispatch('notification/add', notification, { root: true })\n        throw error\n      })\n  },\n  fetchEvents({ commit, dispatch, state }, { page }) {\n    return EventService.getEvents(state.perPage, page)\n      .then(response => {\n        commit('SET_EVENTS_TOTAL', parseInt(response.headers['x-total-count']))\n        commit('SET_EVENTS', response.data)\n      })\n      .catch(error => {\n        const notification = {\n          type: 'error',\n          message: 'There was a problem fetching events: ' + error.message\n        }\n        dispatch('notification/add', notification, { root: true })\n      })\n  },\n  fetchEvent({ commit, getters, state }, id) {\n    if (id == state.event.id) {\n      return state.event\n    }\n\n    var event = getters.getEventById(id)\n\n    if (event) {\n      commit('SET_EVENT', event)\n      return event\n    } else {\n      return EventService.getEvent(id)\n        .then(response => {\n          commit('SET_EVENT', response.data)\n          return response.data\n        })\n        \n    }\n  }\n}\nexport const getters = {\n  getEventById: state => id => {\n    return state.events.find(event => event.id === id)\n  }\n}\n"]}]}